import DataTypes.dzn;
import Resolver.dzn;

interface IAngularAccelerationControl {
	in Behavior check_angular_acceleration();

	behaviour {
		on check_angular_acceleration: { reply(Behavior.Safe); }
		on check_angular_acceleration: { reply(Behavior.Unsafe); }
	}
}

interface IAngularAccelerationSensor {
	in void retrieve_re_from_ang_acc();
	
	behaviour {
		on retrieve_re_from_ang_acc: {}
	}
}

component AngularAccelerationControl {
	provides IAngularAccelerationControl iAngularAccelerationControl;
	requires IAngularAccelerationSensor iAngularAccelerationSensor;
	requires injected IResolver iResolver;

	behaviour {
		on iAngularAccelerationControl.check_angular_acceleration(): {
			Behavior safetyState = Behavior.Safe;
			iAngularAccelerationSensor.retrieve_re_from_ang_acc();
			safetyState = iResolver.resolve_re_from_ang_acc();
			reply(safetyState);
		}
	}
}
