import DataTypes.dzn;
import LEDControl.dzn;
import AccelerationControl.dzn;
import AngularAccelerationControl.dzn;
import GripArmControl.dzn;

interface IController {
	in void initialise();
	in void destruct();
	in void reset();
	
	in void do_checks();

	behaviour {
		enum State {Idle, Operating};
		State state = State.Idle;
		bool unsafe_triggered = false;

		[state.Idle] {
			on initialise: {
				state = State.Operating;
			}
			on destruct: illegal;
			on reset: illegal;
			on do_checks: illegal;
		}
		[state.Operating] {
			on initialise: illegal;
			on destruct: {
				state = State.Idle;
			}
			on reset: { unsafe_triggered = false; }
			// TODO: How can I make a choice between true and false here?
			on do_checks: { unsafe_triggered = true; }
		}
	}
}

component Controller {
	provides IController iController;
	requires ILEDControl iLEDControl;
	requires IAccelerationControl iAccelerationControl;
	requires IAngularAccelerationControl iAngularAccelerationControl;
	requires IGripArmControl iGripArmControl;

	behaviour {
		bool unsafe_triggered = false;

		enum State {Idle, Operating};
		State state = State.Idle;

		[state.Idle] {
			on iController.initialise(): {
				iLEDControl.initialise_framebuffer();
				state = State.Operating;
			}
		}

		[state.Operating] {
			on iController.destruct(): {
				iLEDControl.destruct_framebuffer();
				state = State.Idle;
			}
			on iController.do_checks(): {
				// check acceleration
				Behavior safetyState = iAccelerationControl.check_acceleration();
				if (safetyState == Behavior.Unsafe) {
					iLEDControl.light_led_red();
					unsafe_triggered = true;
				} else if (!unsafe_triggered) {
						iLEDControl.light_led_blue();
				}

				// check angular acceleration
				safetyState = iAngularAccelerationControl.check_angular_acceleration();
				if (safetyState == Behavior.Unsafe) {
					iLEDControl.light_led_red();
					unsafe_triggered = true;
				} else if (!unsafe_triggered) {
						iLEDControl.light_led_blue();
				}
				
				// check grip arm strength
				safetyState = iGripArmControl.check_arm_strength();
				if (safetyState == Behavior.Unsafe) {
					iLEDControl.light_led_red();
					unsafe_triggered = true;
				} else if (!unsafe_triggered) {
						iLEDControl.light_led_blue();
				}
			}
			// Unsafe behavior is acknowledged, reset state.
			on iController.reset(): {
				iLEDControl.reset_led();
				unsafe_triggered = false;
			}
		}
	}
}
